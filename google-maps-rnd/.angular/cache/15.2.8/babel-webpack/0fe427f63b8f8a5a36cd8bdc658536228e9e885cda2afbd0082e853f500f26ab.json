{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Hashir/Desktop/google-maps/google-maps-rnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/// <reference types=\"@types/google.maps\" />\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../display-map/display-map.component\";\nexport class AutocompleteComponent {\n  constructor(displayMap) {\n    this.displayMap = displayMap;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const loader = new Loader({\n        apiKey: \"AIzaSyAeqThAPBANYOIgu-7Rfw7rtvXCJk2ER4c&libraries=places\"\n      });\n      yield loader.load();\n      _this.displayMap.displayMap([]);\n    })();\n  }\n  ngAfterViewInit() {\n    const autocomplete = new google.maps.places.Autocomplete(document.getElementById('auto'), {\n      componentRestrictions: {\n        country: 'us'\n      }\n    });\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      this.place = place;\n      if (place && place.geometry && place.geometry.location) {\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        this.displayMap.displayMap([lat, lng]);\n      }\n    });\n  }\n  saveAddress(_event) {\n    //prevent page from beign reload everytime we save address\n    _event?.preventDefault();\n    if (this.place == undefined) {\n      alert('Enter Valid Address');\n    } else {\n      //fetch input field,clear and show alert\n      var addressInput = document.getElementById('auto');\n      addressInput.value = '';\n      alert('Address Has Been Saved');\n      //all this logic will be replaced create call to database\n      const formattedAddress = this.place?.formatted_address;\n      const streetMatch = formattedAddress?.match(/([^,]+)/);\n      if (streetMatch && streetMatch.length > 1) {\n        console.log('street =' + streetMatch[1].trim());\n      }\n      this.place?.address_components?.forEach(function (component) {\n        if (component.types.includes('locality')) {\n          console.log('city =' + component.long_name);\n        }\n        if (component.types.includes('administrative_area_level_1')) {\n          console.log('state =' + component.long_name);\n        }\n        if (component.types.includes('postal_code')) {\n          console.log('zip code =' + component.long_name);\n        }\n        if (component.types.includes('country')) {\n          console.log('country: ' + component.long_name);\n        }\n      });\n      //setting place undefined again so that we cant save save address again again \n      this.place = undefined;\n    }\n  }\n}\nAutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) {\n  return new (t || AutocompleteComponent)(i0.ɵɵdirectiveInject(i1.DisplayMapComponent));\n};\nAutocompleteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AutocompleteComponent,\n  selectors: [[\"app-autocomplete\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"form-group\"], [\"for\", \"auto\"], [\"type\", \"text\", \"id\", \"auto\", \"aria-describedby\", \"autoHelp\", \"placeholder\", \"Enter Your Address\", 1, \"form-control\"], [1, \"col-4\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AutocompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2)(5, \"br\");\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AutocompleteComponent_Template_button_click_7_listener($event) {\n        return ctx.saveAddress($event);\n      });\n      i0.ɵɵtext(8, \"Save\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(9, \"br\")(10, \"app-display-map\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i1.DisplayMapComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAAA;AASA,SAASA,MAAM,QAAQ,2BAA2B;;;AAOlD,OAAM,MAAOC,qBAAqB;EAEhCC,YAAoBC,UAA+B;IAA/B,eAAU,GAAVA,UAAU;EAAwB;EAEhDC,QAAQ;IAAA;IAAA;MACZ,MAAMC,MAAM,GAAG,IAAIL,MAAM,CAAC;QACxBM,MAAM,EAAE;OACT,CAAC;MACF,MAAMD,MAAM,CAACE,IAAI,EAAE;MACnB,KAAI,CAACJ,UAAU,CAACA,UAAU,CAAC,EAAE,CAAC;IAAC;EACjC;EACAK,eAAe;IACb,MAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,YAAY,CACtDC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAqB,EACnD;MACEC,qBAAqB,EAAE;QAAEC,OAAO,EAAE;MAAI;KACvC,CACF;IACDP,MAAM,CAACC,IAAI,CAACO,KAAK,CAACC,WAAW,CAACV,YAAY,EAAE,eAAe,EAAE,MAAK;MAChE,MAAMW,KAAK,GAAGX,YAAY,CAACY,QAAQ,EAAE;MACrC,IAAI,CAACD,KAAK,GAACA,KAAK;MAChB,IAAIA,KAAK,IAAIA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,QAAQ,EAAE;QACtD,MAAMC,GAAG,GAAGJ,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,EAAE;QACzC,MAAMC,GAAG,GAAGL,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACE,GAAG,EAAE;QACzC,IAAI,CAACtB,UAAU,CAACA,UAAU,CAAC,CAACqB,GAAG,EAACC,GAAG,CAAC,CAAC;;IAGzC,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,MAAW;IAErB;IACAA,MAAM,EAAEC,cAAc,EAAE;IAExB,IAAG,IAAI,CAACR,KAAK,IAAES,SAAS,EAAC;MACvBC,KAAK,CAAC,qBAAqB,CAAC;KAC7B,MACG;MACF;MACA,IAAIC,YAAY,GAAGjB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAqB;MACtEgB,YAAY,CAACC,KAAK,GAAC,EAAE;MACrBF,KAAK,CAAC,wBAAwB,CAAC;MAEjC;MACA,MAAMG,gBAAgB,GAAG,IAAI,CAACb,KAAK,EAAEc,iBAAiB;MAClD,MAAMC,WAAW,GAAGF,gBAAgB,EAAEG,KAAK,CAAC,SAAS,CAAC;MACtD,IAAID,WAAW,IAAIA,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;QACzCC,OAAO,CAACC,GAAG,CAAC,UAAU,GAACJ,WAAW,CAAC,CAAC,CAAC,CAACK,IAAI,EAAE,CAAC;;MAEjD,IAAI,CAACpB,KAAK,EAAEqB,kBAAkB,EAAEC,OAAO,CAAC,UAASC,SAAS;QACxD,IAAIA,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;UACxCP,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACI,SAAS,CAACG,SAAS,CAAC;;QAE3C,IAAIH,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;UAC3DP,OAAO,CAACC,GAAG,CAAC,SAAS,GAACI,SAAS,CAACG,SAAS,CAAC;;QAE5C,IAAIH,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;UAC3CP,OAAO,CAACC,GAAG,CAAC,YAAY,GAACI,SAAS,CAACG,SAAS,CAAC;;QAE/C,IAAIH,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;UACvCP,OAAO,CAACC,GAAG,CAAC,WAAW,GAACI,SAAS,CAACG,SAAS,CAAC;;MAElD,CAAC,CAAC;MAEF;MACA,IAAI,CAAC1B,KAAK,GAACS,SAAS;;EAEtB;;AApEW5B,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA8C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBlCC,4BAAM;MAEoBA,uBAAO;MAAAA,iBAAQ;MACjCA,2BAA+G;MAE/GA,8BAAmB;MACiBA;QAAA,OAASC,uBAAmB;MAAA,EAAC;MAACD,oBAAI;MAAAA,iBAAS;MAG/EA,qBAAI;MAIZA,iBAAO","names":["Loader","AutocompleteComponent","constructor","displayMap","ngOnInit","loader","apiKey","load","ngAfterViewInit","autocomplete","google","maps","places","Autocomplete","document","getElementById","componentRestrictions","country","event","addListener","place","getPlace","geometry","location","lat","lng","saveAddress","_event","preventDefault","undefined","alert","addressInput","value","formattedAddress","formatted_address","streetMatch","match","length","console","log","trim","address_components","forEach","component","types","includes","long_name","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Hashir\\Desktop\\google-maps\\google-maps-rnd\\src\\app\\components\\autocomplete\\autocomplete.component.ts","C:\\Users\\Hashir\\Desktop\\google-maps\\google-maps-rnd\\src\\app\\components\\autocomplete\\autocomplete.component.html"],"sourcesContent":["/// <reference types=\"@types/google.maps\" />\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { DisplayMapComponent } from '../display-map/display-map.component';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.css'],\r\n})\r\nexport class AutocompleteComponent implements OnInit, AfterViewInit {\r\n  place:google.maps.places.PlaceResult | undefined\r\n  constructor(private displayMap: DisplayMapComponent) {}\r\n\r\n  async ngOnInit() {\r\n    const loader = new Loader({\r\n      apiKey: \"AIzaSyAeqThAPBANYOIgu-7Rfw7rtvXCJk2ER4c&libraries=places\",\r\n    });\r\n    await loader.load()\r\n    this.displayMap.displayMap([]);\r\n  }\r\n  ngAfterViewInit() {\r\n    const autocomplete = new google.maps.places.Autocomplete(\r\n      document.getElementById('auto') as HTMLInputElement,\r\n      {\r\n        componentRestrictions: { country: 'us' },\r\n      }\r\n    );\r\n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\r\n      const place = autocomplete.getPlace();\r\n      this.place=place\r\n      if (place && place.geometry && place.geometry.location) {\r\n        const lat = place.geometry.location.lat();\r\n        const lng = place.geometry.location.lng();\r\n        this.displayMap.displayMap([lat,lng]);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  saveAddress(_event: any){\r\n\r\n    //prevent page from beign reload everytime we save address\r\n    _event?.preventDefault();\r\n    \r\n    if(this.place==undefined){\r\n      alert('Enter Valid Address');\r\n    }\r\n    else{\r\n      //fetch input field,clear and show alert\r\n      var addressInput = document.getElementById('auto') as HTMLInputElement;\r\n      addressInput.value=''\r\n      alert('Address Has Been Saved');\r\n\r\n    //all this logic will be replaced create call to database\r\n    const formattedAddress = this.place?.formatted_address;\r\n        const streetMatch = formattedAddress?.match(/([^,]+)/);\r\n        if (streetMatch && streetMatch.length > 1) {\r\n          console.log('street ='+streetMatch[1].trim());\r\n        }\r\n      this.place?.address_components?.forEach(function(component) {\r\n        if (component.types.includes('locality')) {\r\n          console.log('city ='+component.long_name);\r\n        }\r\n        if (component.types.includes('administrative_area_level_1')) {\r\n          console.log('state ='+component.long_name);\r\n        }\r\n        if (component.types.includes('postal_code')) {\r\n          console.log('zip code ='+component.long_name);\r\n        }\r\n        if (component.types.includes('country')) {\r\n          console.log('country: '+component.long_name);\r\n      }\r\n    });\r\n\r\n    //setting place undefined again so that we cant save save address again again \r\n    this.place=undefined\r\n    }\r\n  }\r\n}\r\n","<form>\r\n    <div class=\"form-group\">\r\n        <label for=\"auto\">Address</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"auto\" aria-describedby=\"autoHelp\" placeholder=\"Enter Your Address\">\r\n        <br>\r\n        <div class=\"col-4\">\r\n            <button class=\"btn btn-primary\" (click)=\"saveAddress($event)\">Save</button>\r\n        </div>\r\n    </div>\r\n        <br>\r\n    <app-display-map></app-display-map>\r\n\r\n    \r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}